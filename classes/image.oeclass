# -*- mode:python; -*-

addtask rstage after do_patch before do_compile
addtask deploy after do_fixup before do_build

IMAGE_BASENAME ?= "${PN}"
IMAGE_FULLNAME ?= "${IMAGE_BASENAME}-${DATETIME}"

IMAGE_PREPROCESS_FUNCS	?= ""
IMAGE_CREATE_FUNCS	?= ""

SRC_URI = ""

FILES_${PN} = ""

# IMAGE_PREPROCESS_FUNCS could create device nodes, merge crontab
# entries, mdev.conf and ineted.conf files

do_compile[dirs] = "${IMAGE_DIR}"
do_compile[cleandirs] = "${IMAGE_DIR}"

fakeroot do_compile () {
    cp -a ${RSTAGE_DIR}/. ./
    for func in ${IMAGE_PREPROCESS_FUNCS}; do
        $func
    done
    for func in ${IMAGE_CREATE_FUNCS}; do
        $func
    done
}

do_install () {
    :
}
do_install[postfuncs] = "${DO_INSTALL_POSTFUNCS}"

do_deploy[dirs] = "${IMAGE_DEPLOY_DIR}"
do_deploy() {
    :
}
do_deploy[postfuncs] = "${DO_DEPLOY_POSTFUNCS}"

do_rstage[cleandirs]	= "${RSTAGE_DIR} ${RSTAGE_DIR}.unpack"
do_rstage[dirs]		= "${RSTAGE_DIR}"
do_rstage[recrdeptask]	= "do_package"

do_rstage[import] = "set_stage"
def do_rstage(d):
    if d.get("RECIPE_TYPE") == "canadian-cross":
        def get_dstdir(cwd, package):
            if package.type == "machine":
                return os.path.join(cwd, package.arch, "sysroot")
            else:
                return cwd
    else:
        def get_dstdir(cwd, package):
            return cwd
    retval = set_stage(d, "__rstage", "RSTAGE_FIXUP_FUNCS", get_dstdir,
                       d.get("RSTAGE_DIR") + ".unpack")
    metadir = d.getVar("metadir", True).lstrip("/")
    if os.path.exists(metadir):
        import shutil
        shutil.rmtree(metadir)
    return retval

RSTAGE_FIXUP_FUNCS ?= ""
