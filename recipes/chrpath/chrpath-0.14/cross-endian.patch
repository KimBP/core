diff -urN chrpath-0.14/elf.c chrpath-0.14~patched/elf.c
--- chrpath-0.14/elf.c	2011-09-26 20:12:49.000000000 +0200
+++ chrpath-0.14~patched/elf.c	2013-05-16 20:30:45.838955729 +0200
@@ -16,9 +16,17 @@
 #include <fcntl.h>
 #include "protos.h"
 
+#define EHDR_PSH(x) (is_e32() ? DO_SWAPS16(ehdr->e32.x) : DO_SWAPS16(ehdr->e64.x))
+#define EHDR_PSW(x) (is_e32() ? DO_SWAPS32(ehdr->e32.x) : DO_SWAPS32(ehdr->e64.x))
 #define EHDR_PS(x) (is_e32() ? DO_SWAPS32(ehdr->e32.x) : DO_SWAPS64(ehdr->e64.x))
+#define PHDR_PSH(x) (is_e32() ? DO_SWAPS16(phdr->e32.x) : DO_SWAPS16(phdr->e64.x))
+#define PHDR_PSW(x) (is_e32() ? DO_SWAPS32(phdr->e32.x) : DO_SWAPS32(phdr->e64.x))
 #define PHDR_PS(x) (is_e32() ? DO_SWAPS32(phdr->e32.x) : DO_SWAPS64(phdr->e64.x))
+#define EHDR_PUH(x) (is_e32() ? DO_SWAPU16(ehdr->e32.x) : DO_SWAPU16(ehdr->e64.x))
+#define EHDR_PUW(x) (is_e32() ? DO_SWAPU32(ehdr->e32.x) : DO_SWAPU32(ehdr->e64.x))
 #define EHDR_PU(x) (is_e32() ? DO_SWAPU32(ehdr->e32.x) : DO_SWAPU64(ehdr->e64.x))
+#define PHDR_PUH(x) (is_e32() ? DO_SWAPU16(phdr->e32.x) : DO_SWAPU16(phdr->e64.x))
+#define PHDR_PUW(x) (is_e32() ? DO_SWAPU32(phdr->e32.x) : DO_SWAPU32(phdr->e64.x))
 #define PHDR_PU(x) (is_e32() ? DO_SWAPU32(phdr->e32.x) : DO_SWAPU64(phdr->e64.x))
 
 static int is_e32_flag;
@@ -83,10 +91,10 @@
    }
 
    sz_phdr = is_e32() ? sizeof(Elf32_Phdr) : sizeof(Elf64_Phdr);
-   if (EHDR_PS(e_phentsize) != sz_phdr)
+   if (EHDR_PSH(e_phentsize) != sz_phdr)
    {
      fprintf(stderr, "section size was read as %d, not %d!\n",
-            (int)EHDR_PS(e_phentsize), (int)sz_phdr);
+            (int)EHDR_PSH(e_phentsize), (int)sz_phdr);
      close(fd);
      return -1;
    }
@@ -103,7 +111,7 @@
     return 1;
   }
 
-  for (i = 0; i < EHDR_PS(e_phnum); i++)
+  for (i = 0; i < EHDR_PSH(e_phnum); i++)
   {
     const size_t sz_phdr = is_e32() ? sizeof(Elf32_Phdr) : sizeof(Elf64_Phdr);
     if (read(fd, phdr, sz_phdr) != (ssize_t)sz_phdr)
@@ -111,10 +119,10 @@
       perror ("reading section header");
       return 1;
     }
-    if (PHDR_PU(p_type) == PT_DYNAMIC)
+    if (PHDR_PUW(p_type) == PT_DYNAMIC)
       break;
   }
-  if (i == EHDR_PS(e_phnum))
+  if (i == EHDR_PSH(e_phnum))
     {
       fprintf (stderr, "No dynamic section found.\n");
       return 2;
diff -urN chrpath-0.14/protos.h chrpath-0.14~patched/protos.h
--- chrpath-0.14/protos.h	2011-09-26 20:13:23.000000000 +0200
+++ chrpath-0.14~patched/protos.h	2013-05-16 20:30:39.031211017 +0200
@@ -33,15 +33,25 @@
 int is_e32(void);
 int swap_bytes(void);
 
+#define DO_SWAPU16(x) ( !swap_bytes() ? x : (uint16_t)bswap_16(x) )
 #define DO_SWAPU32(x) ( !swap_bytes() ? x : (uint32_t)bswap_32(x) )
 #define DO_SWAPU64(x) ( !swap_bytes() ? x : (uint64_t)bswap_64(x) )
+#define DO_SWAPS16(x) ( !swap_bytes() ? x : (int16_t)bswap_16(x) )
 #define DO_SWAPS32(x) ( !swap_bytes() ? x : (int32_t)bswap_32(x) )
 #define DO_SWAPS64(x) ( !swap_bytes() ? x : (int64_t)bswap_64(x) )
 
 #define EHDRS(x) (is_e32() ? DO_SWAPS32(ehdr.e32.x) : DO_SWAPS64(ehdr.e64.x))
+#define EHDRSW(x) (is_e32() ? DO_SWAPS32(ehdr.e32.x) : DO_SWAPS32(ehdr.e64.x))
+#define EHDRSH(x) (is_e32() ? DO_SWAPS16(ehdr.e32.x) : DO_SWAPS16(ehdr.e64.x))
 #define EHDRU(x) (is_e32() ? DO_SWAPU32(ehdr.e32.x) : DO_SWAPU64(ehdr.e64.x))
+#define EHDRUW(x) (is_e32() ? DO_SWAPU32(ehdr.e32.x) : DO_SWAPU32(ehdr.e64.x))
+#define EHDRUH(x) (is_e32() ? DO_SWAPU16(ehdr.e32.x) : DO_SWAPU16(ehdr.e64.x))
 #define PHDR(x) (is_e32() ? DO_SWAPU32(phdr.e32.x) : DO_SWAPU64(phdr.e64.x))
+#define PHDRW(x) (is_e32() ? DO_SWAPU32(phdr.e32.x) : DO_SWAPU32(phdr.e64.x))
+#define PHDRH(x) (is_e32() ? DO_SWAPU16(phdr.e32.x) : DO_SWAPU16(phdr.e64.x))
 #define SHDR(x) (is_e32() ? DO_SWAPU32(shdr.e32.x) : DO_SWAPU64(shdr.e64.x))
+#define SHDRW(x) (is_e32() ? DO_SWAPU32(shdr.e32.x) : DO_SWAPU32(shdr.e64.x))
+#define SHDRH(x) (is_e32() ? DO_SWAPU16(shdr.e32.x) : DO_SWAPU16(shdr.e64.x))
 #define DYNSU(i,x) (is_e32() ? DO_SWAPU32(((Elf32_Dyn *)dyns)[i].x) \
   : DO_SWAPU64(((Elf64_Dyn *)dyns)[i].x))
 #define DYNSS(i,x) (is_e32() ? DO_SWAPS32(((Elf32_Dyn *)dyns)[i].x) \
