diff -r f36a98f63749 config/toolchain.in
--- a/config/toolchain.in	Sun Nov 11 21:43:54 2012 +0100
+++ b/config/toolchain.in	Sun Dec 09 13:39:33 2012 +0100
@@ -303,6 +303,55 @@
 
 endif # CANADIAN
 
+if CROSS_NATIVE || CANADIAN
+
+comment "Target system"
+
+config TARGET_PREFIX
+    string
+    prompt "|  Tools prefix (READ HELP!)"
+    default ""
+    help
+      If you have your *target system* tools in a weird location, and/or
+      they have an unusual prefix, enter it here.
+      
+      Usually, you should leave that empty!
+      
+      Eg.:
+        If your *target* gcc is /opt/target-tools/bin/weird-gcc then you
+        should enter:
+            /opt/target-tools/bin/weird-
+        
+        If your *target* gcc is /opt/target-tools/bin/weird-gcc and
+        /opt/target-tools/bin is in your PATH, you should enter:
+            weird-
+        
+        If your *target* gcc is /opt/target-tools/bin/gcc then you
+        should enter (do not forget to add the trailing '/'):
+            /opt/target-tools/bin/
+
+config TARGET_SUFFIX
+    string
+    prompt "|  Tools suffix (READ HELP!)"
+    default ""
+    help
+      If your *target system* tools have an unusual suffix, enter it
+      here.
+      
+      Usually, you should leave that empty!
+      
+      Eg.:
+        If your 'default' gcc is gcc 4.3.1, but you also have gcc-3.4.2
+        installed as gcc-3.4, then you should enter:
+            -3.4
+      
+      It can happen that some of the tools have a suffix, when others
+      don't, eg. you can have 'gcc-3.4' and 'ar'. crosstool-NG accounts
+      for that by checking the tools without the suffix in case it can
+      not find some of the tool.
+
+endif # CROSS_NATIVE || CANADIAN
+
 comment "Misc options"
 
 config TOOLCHAIN_ENABLE_NLS
diff -r f36a98f63749 scripts/build/cc/gcc.sh
--- a/scripts/build/cc/gcc.sh	Sun Nov 11 21:43:54 2012 +0100
+++ b/scripts/build/cc/gcc.sh	Sun Dec 09 13:39:33 2012 +0100
@@ -83,6 +83,10 @@
 do_cc_core_pass_1() {
     local -a core_opts
 
+    case "${CT_TOOLCHAIN_TYPE}" in
+        canadian|cross-native)   return 0;;
+    esac
+
     core_opts+=( "mode=static" )
     core_opts+=( "host=${CT_BUILD}" )
     core_opts+=( "complibs=${CT_BUILDTOOLS_PREFIX_DIR}" )
@@ -103,6 +107,10 @@
 do_cc_core_pass_2() {
     local -a core_opts
 
+    case "${CT_TOOLCHAIN_TYPE}" in
+        canadian|cross-native)   return 0;;
+    esac
+
     # Common options:
     core_opts+=( "host=${CT_BUILD}" )
     core_opts+=( "prefix=${CT_BUILDTOOLS_PREFIX_DIR}" )
diff -r f36a98f63749 scripts/crosstool-NG.sh.in
--- a/scripts/crosstool-NG.sh.in	Sun Nov 11 21:43:54 2012 +0100
+++ b/scripts/crosstool-NG.sh.in	Sun Dec 09 13:39:33 2012 +0100
@@ -365,7 +365,7 @@
             build_mangle="build_"
             host_mangle="host_"
             target_mangle=""
-            install_build_tools_for="BUILD HOST"
+            install_build_tools_for="BUILD HOST TARGET"
             ;;
         *)  CT_Abort "No code for '${CT_TOOLCHAIN_TYPE}' toolchain type!"
             ;;
